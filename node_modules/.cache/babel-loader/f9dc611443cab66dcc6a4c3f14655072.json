{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Admin/OneDrive/Desktop/collaborative-code-editor/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Admin/OneDrive/Desktop/collaborative-code-editor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\collaborative-code-editor\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useRef,useEffect}from'react';import toast from'react-hot-toast';import ACTIONS from'../Actions';import Client from'../components/Client';import Editor from'../components/Editor';import{initSocket}from'../socket';import{useLocation,useNavigate,Navigate,useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditorPage=function EditorPage(){var socketRef=useRef(null);var codeRef=useRef(null);var location=useLocation();var _useParams=useParams(),roomId=_useParams.roomId;var reactNavigator=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clients=_useState2[0],setClients=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),authenticated=_useState4[0],setAuthenticated=_useState4[1];useEffect(function(){var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _location$state,_location$state2;var handleErrors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:handleErrors=function _handleErrors(e){console.log('socket error',e);toast.error('Socket connection failed, try again later.');reactNavigator('/');};_context.next=3;return initSocket();case 3:socketRef.current=_context.sent;socketRef.current.on('connect_error',function(err){return handleErrors(err);});socketRef.current.on('connect_failed',function(err){return handleErrors(err);});// Emit join with password\nsocketRef.current.emit(ACTIONS.JOIN,{roomId:roomId,username:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username,password:(_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.password// Include password in join request\n});// Listening for authentication result\nsocketRef.current.on(ACTIONS.AUTH_ERROR,function(){toast.error('Incorrect password. Access denied.');reactNavigator('/');});// Listening for joined event - only happens after successful authentication\nsocketRef.current.on(ACTIONS.JOINED,function(_ref2){var _location$state3;var clients=_ref2.clients,username=_ref2.username,socketId=_ref2.socketId;setAuthenticated(true);if(username!==((_location$state3=location.state)===null||_location$state3===void 0?void 0:_location$state3.username)){toast.success(\"\".concat(username,\" joined the room.\"));console.log(\"\".concat(username,\" joined\"));}setClients(clients);socketRef.current.emit(ACTIONS.SYNC_CODE,{code:codeRef.current,socketId:socketId});});// Listening for disconnected\nsocketRef.current.on(ACTIONS.DISCONNECTED,function(_ref3){var socketId=_ref3.socketId,username=_ref3.username;toast.success(\"\".concat(username,\" left the room.\"));setClients(function(prev){return prev.filter(function(client){return client.socketId!==socketId;});});});case 10:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();return function(){socketRef.current.disconnect();socketRef.current.off(ACTIONS.JOINED);socketRef.current.off(ACTIONS.DISCONNECTED);socketRef.current.off(ACTIONS.AUTH_ERROR);};},[]);function copyRoomId(){return _copyRoomId.apply(this,arguments);}function _copyRoomId(){_copyRoomId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return navigator.clipboard.writeText(roomId);case 3:toast.success('Room ID has been copied to your clipboard');_context2.next=10;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);toast.error('Could not copy the Room ID');console.error(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,6]]);}));return _copyRoomId.apply(this,arguments);}function copyRoomInfo(){return _copyRoomInfo.apply(this,arguments);}function _copyRoomInfo(){_copyRoomInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _location$state4,roomInfo;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;roomInfo=\"Room ID: \".concat(roomId,\"\\nPassword: \").concat((_location$state4=location.state)===null||_location$state4===void 0?void 0:_location$state4.password);_context3.next=4;return navigator.clipboard.writeText(roomInfo);case 4:toast.success('Room ID and password have been copied to your clipboard');_context3.next=11;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);toast.error('Could not copy the room information');console.error(_context3.t0);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return _copyRoomInfo.apply(this,arguments);}function leaveRoom(){reactNavigator('/');}// If no location state or missing required fields, redirect to home\nif(!location.state||!location.state.username||!location.state.password){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"mainWrap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"aside\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"asideInner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{className:\"logoImage\",src:\"/code-sync.png\",alt:\"logo\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Connected\"}),/*#__PURE__*/_jsx(\"div\",{className:\"clientsList\",children:clients.map(function(client){return/*#__PURE__*/_jsx(Client,{username:client.username},client.socketId);})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn copyBtn\",onClick:copyRoomId,children:\"Copy ROOM ID\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn copyInfoBtn\",onClick:copyRoomInfo,children:\"Copy Room Info\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn leaveBtn\",onClick:leaveRoom,children:\"Leave\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"editorWrap\",children:/*#__PURE__*/_jsx(Editor,{socketRef:socketRef,roomId:roomId,onCodeChange:function onCodeChange(code){codeRef.current=code;}})})]});};export default EditorPage;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/collaborative-code-editor/src/pages/EditorPage.js"],"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","EditorPage","socketRef","codeRef","location","roomId","reactNavigator","clients","setClients","authenticated","setAuthenticated","init","handleErrors","e","console","log","error","current","on","err","emit","JOIN","username","state","password","AUTH_ERROR","JOINED","socketId","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","disconnect","off","copyRoomId","navigator","clipboard","writeText","copyRoomInfo","roomInfo","leaveRoom","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport ACTIONS from '../Actions';\r\nimport Client from '../components/Client';\r\nimport Editor from '../components/Editor';\r\nimport { initSocket } from '../socket';\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    Navigate,\r\n    useParams,\r\n} from 'react-router-dom';\r\n\r\nconst EditorPage = () => {\r\n    const socketRef = useRef(null);\r\n    const codeRef = useRef(null);\r\n    const location = useLocation();\r\n    const { roomId } = useParams();\r\n    const reactNavigator = useNavigate();\r\n    const [clients, setClients] = useState([]);\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            socketRef.current = await initSocket();\r\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\r\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\r\n\r\n            function handleErrors(e) {\r\n                console.log('socket error', e);\r\n                toast.error('Socket connection failed, try again later.');\r\n                reactNavigator('/');\r\n            }\r\n\r\n            // Emit join with password\r\n            socketRef.current.emit(ACTIONS.JOIN, {\r\n                roomId,\r\n                username: location.state?.username,\r\n                password: location.state?.password, // Include password in join request\r\n            });\r\n\r\n            // Listening for authentication result\r\n            socketRef.current.on(ACTIONS.AUTH_ERROR, () => {\r\n                toast.error('Incorrect password. Access denied.');\r\n                reactNavigator('/');\r\n            });\r\n\r\n            // Listening for joined event - only happens after successful authentication\r\n            socketRef.current.on(\r\n                ACTIONS.JOINED,\r\n                ({ clients, username, socketId }) => {\r\n                    setAuthenticated(true);\r\n                    if (username !== location.state?.username) {\r\n                        toast.success(`${username} joined the room.`);\r\n                        console.log(`${username} joined`);\r\n                    }\r\n                    setClients(clients);\r\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\r\n                        code: codeRef.current,\r\n                        socketId,\r\n                    });\r\n                }\r\n            );\r\n\r\n            // Listening for disconnected\r\n            socketRef.current.on(\r\n                ACTIONS.DISCONNECTED,\r\n                ({ socketId, username }) => {\r\n                    toast.success(`${username} left the room.`);\r\n                    setClients((prev) => {\r\n                        return prev.filter(\r\n                            (client) => client.socketId !== socketId\r\n                        );\r\n                    });\r\n                }\r\n            );\r\n        };\r\n        init();\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n            socketRef.current.off(ACTIONS.JOINED);\r\n            socketRef.current.off(ACTIONS.DISCONNECTED);\r\n            socketRef.current.off(ACTIONS.AUTH_ERROR);\r\n        };\r\n    }, []);\r\n\r\n    async function copyRoomId() {\r\n        try {\r\n            await navigator.clipboard.writeText(roomId);\r\n            toast.success('Room ID has been copied to your clipboard');\r\n        } catch (err) {\r\n            toast.error('Could not copy the Room ID');\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    async function copyRoomInfo() {\r\n        try {\r\n            const roomInfo = `Room ID: ${roomId}\\nPassword: ${location.state?.password}`;\r\n            await navigator.clipboard.writeText(roomInfo);\r\n            toast.success('Room ID and password have been copied to your clipboard');\r\n        } catch (err) {\r\n            toast.error('Could not copy the room information');\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    function leaveRoom() {\r\n        reactNavigator('/');\r\n    }\r\n\r\n    // If no location state or missing required fields, redirect to home\r\n    if (!location.state || !location.state.username || !location.state.password) {\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainWrap\">\r\n            <div className=\"aside\">\r\n                <div className=\"asideInner\">\r\n                    <div className=\"logo\">\r\n                        <img\r\n                            className=\"logoImage\"\r\n                            src=\"/code-sync.png\"\r\n                            alt=\"logo\"\r\n                        />\r\n                    </div>\r\n                    <h3>Connected</h3>\r\n                    <div className=\"clientsList\">\r\n                        {clients.map((client) => (\r\n                            <Client\r\n                                key={client.socketId}\r\n                                username={client.username}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn copyBtn\" onClick={copyRoomId}>\r\n                    Copy ROOM ID\r\n                </button>\r\n                <button className=\"btn copyInfoBtn\" onClick={copyRoomInfo}>\r\n                    Copy Room Info\r\n                </button>\r\n                <button className=\"btn leaveBtn\" onClick={leaveRoom}>\r\n                    Leave\r\n                </button>\r\n            </div>\r\n            <div className=\"editorWrap\">\r\n                <Editor\r\n                    socketRef={socketRef}\r\n                    roomId={roomId}\r\n                    onCodeChange={(code) => {\r\n                        codeRef.current = code;\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditorPage;"]},"metadata":{},"sourceType":"module"}